plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

mainClassName = 'com.example.app.Main'

ext {
    arcgisVersion = '100.12.0'
}

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml','javafx.base','javafx.graphics' ]
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url 'https://esri.jfrog.io/artifactory/arcgis'
    }
}


configurations {
    natives
}

dependencies {
    runtimeOnly 'org.slf4j:slf4j-nop:1.7.32'
    implementation "com.esri.arcgisruntime:arcgis-java:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion"
}


task copyNatives(type: Copy) {
    description = "Copies the arcgis native libraries into the " +
            "project build directory for development."
    group = "build"
    configurations.natives.asFileTree.each {
        from(zipTree(it))
    }
    // store native libraries in a common location shared with other samples
    into "${System.properties.getProperty("user.home")}/.arcgis/$arcgisVersion"
}


run {
    dependsOn copyNatives
    mainClassName = "$mainClassName"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    exclude("META-INF/*.RSA", "META-INF/*.DSA", "META-INF/*.SF")

    manifest {
        attributes('Main-Class': "$mainClassName")
    }
    dependsOn('dependencies')

    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}


wrapper {
    gradleVersion = '6.5.1'
}